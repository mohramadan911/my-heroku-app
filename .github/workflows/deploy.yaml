name: Deploy to AWS EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: 'Deploy Infrastructure and Application'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.0.0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./terraform

    - name: Get EC2 public IP and private key
      id: get-ip-and-key
      run: |
        echo "EC2_IP=$(terraform -chdir=./terraform output -raw public_ip)" >> $GITHUB_ENV
        terraform -chdir=./terraform output -raw private_key > private_key.pem
        chmod 600 private_key.pem

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm ci

    # Add a delay to ensure EC2 instance is ready
    - name: Wait for EC2 instance
      run: |
        echo "Waiting 60 seconds for EC2 instance to initialize..."
        sleep 60

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.EC2_IP }}
        username: ec2-user
        key_path: private_key.pem
        script: |
          cd ~/app || mkdir -p ~/app
          rm -rf ~/app/*
          git clone https://github.com/${{ github.repository }}.git ~/app
          cd ~/app
          npm install
          pm2 stop all || true
          pm2 start app.js --name "nodejs-app"
          # Set up a simple nginx config to proxy requests to the Node.js app
          sudo amazon-linux-extras install nginx1 -y
          ~/app/scripts/setup-nginx.sh